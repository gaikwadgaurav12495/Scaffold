apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: httpd-server-template
  title: HTTPD Server Deployment Template
  description: Create a deployment for HTTPD server with ConfigMaps from specified repositories
  tags:
    - httpd
    - webserver
    - deployment
spec:
  owner: your-team
  type: service
  parameters:
    - title: Provide Application Information
      required:
        - application_name
        - namespace
        - repository_url
        - config_map_name
        - pvc_name
      properties:
        application_name:
          title: Application Name
          type: string
          description: Unique name of the application
          default: foo-app
        namespace:
          title: Namespace
          type: string
          description: Kubernetes namespace
          default: default
        repository_url:
          title: Repository URL
          type: string
          description: URL of the Git repository containing HTML files
          default: https://github.com/gaikwadgaurav12495/test2.git
        config_map_name:
          title: ConfigMap Name
          type: string
          description: Name of the ConfigMap to create
          default: test2-configmap
        pvc_name:
          title: PVC Name
          type: string
          description: Name of the Persistent Volume Claim to use
          default: html-home

  steps:
    - id: fetch-html-repo
      name: Fetch HTML Repository
      action: fetch:template
      input:
        url: "${{ parameters.repository_url }}"
        copyWithoutTemplating:
          - . # Copy all files in the root without templating

    - id: deploy-httpd
      name: Deploy HTTPD Server
      action: kubernetes:apply
      input:
        manifests:
          - apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: ${{ parameters.application_name }}
              namespace: ${{ parameters.namespace }}
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: ${{ parameters.application_name }}
              template:
                metadata:
                  labels:
                    app: ${{ parameters.application_name }}
                spec:
                  containers:
                    - name: httpd
                      image: registry.redhat.io/rhel8/httpd-24:1-335.1724231549
                      ports:
                        - containerPort: 80
                      volumeMounts:
                        - name: html-volume
                          mountPath: /usr/share/httpd/html
                  volumes:
                    - name: html-volume
                      persistentVolumeClaim:
                        claimName: ${{ parameters.pvc_name }}

    - id: create-configmap
      name: Create ConfigMap
      action: kubernetes:apply
      input:
        manifests:
          - apiVersion: v1
            kind: ConfigMap
            metadata:
              name: ${{ parameters.config_map_name }}
              namespace: ${{ parameters.namespace }}
            data:
              index.html: |
                # Place your HTML content here or fetch it from the repository

  output:
    links:
      - title: View Deployment
        url: https://your-k8s-dashboard-url/api/v1/namespaces/${{ parameters.namespace }}/deployments/${{ parameters.application_name }}
