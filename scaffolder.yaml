apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: deploy-httpd-server
  title: Deploy HTTPd Server with Tekton Pipeline
  description: Scaffold template to deploy an HTTP server using a Tekton pipeline and serve HTML from Git repos
  tags:
    - tekton
    - httpd
    - kubernetes
  owner: your-team
spec:
  type: website  # This is the missing type property, required by the scaffolder processor
  parameters:
    - title: Application Deployment Parameters
      required:
        - repositoryUrl
        - pvcName
        - namespace
        - deploymentName
        - configMapName
      properties:
        repositoryUrl:
          title: HTML Repository URL
          type: string
          description: The Git repository URL where the HTML files are stored.
          examples:
            - https://github.com/gaikwadgaurav12495/test.git
        pvcName:
          title: PVC Name
          type: string
          description: Name of the PersistentVolumeClaim (PVC) to be used.
        namespace:
          title: Namespace
          type: string
          description: Kubernetes namespace where the application will be deployed.
        deploymentName:
          title: Deployment Name
          type: string
          description: Name of the Kubernetes deployment.
        configMapName:
          title: ConfigMap Name
          type: string
          description: Name of the ConfigMap to use.

  steps:
    - id: fetch-html-repository
      name: Fetch HTML Repository
      action: fetch:template
      input:
        url: '{{ parameters.repositoryUrl }}'
        targetPath: './repo'
      description: "Fetches the HTML repository from Git."

    - id: create-configmap
      name: Create ConfigMap from HTML Files
      action: exec:run
      input:
        workingDirectory: './repo'
        command: kubectl
        args:
          - create
          - configmap
          - '{{ parameters.configMapName }}'
          - --from-file=index.html=./index.html
          - -n
          - '{{ parameters.namespace }}'
        description: "Creates a ConfigMap from the HTML files in the repository."

    - id: apply-pipeline
      name: Apply Tekton Pipeline
      action: exec:run
      input:
        workingDirectory: './repo/pipelines'
        command: kubectl
        args:
          - apply
          - -f
          - pipeline.yaml
        description: "Applies the Tekton pipeline to deploy the HTTP server."

    - id: trigger-pipeline
      name: Trigger Pipeline Run
      action: exec:run
      input:
        command: tkn
        args:
          - pipeline
          - start
          - deploy-httpd-pipeline
          - -p
          - pvc-name={{ parameters.pvcName }}
          - -p
          - namespace={{ parameters.namespace }}
          - -p
          - deployment-name={{ parameters.deploymentName }}
          - -p
          - configmap-name={{ parameters.configMapName }}
        description: "Triggers the Tekton pipeline to run with the provided parameters."

    - id: verify-deployment
      name: Verify Deployment
      action: exec:run
      input:
        command: kubectl
        args:
          - get
          - deployment
          - '{{ parameters.deploymentName }}'
          - -n
          - '{{ parameters.namespace }}'
        description: "Verifies that the HTTP server has been successfully deployed."
